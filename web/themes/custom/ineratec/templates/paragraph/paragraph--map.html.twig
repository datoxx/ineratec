{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{{ attach_library('ineratec/map-lib') }}
{{ attach_library('ineratec/leaflet-librarie') }}

{% set arr = get_projects_locations() %}
{% set configData = get_config_page_data() %}

{% block paragraph %}

  <div class="lg:mb-[151px] mb-[91px]" data-json="{{ arr|json_encode() }}" data-config="{{ configData|json_encode() }}" id="map_container_div">

    <div class="w-full h-[667px] lg:h-[1000px] z-10" id="map"></div>
    <div class="w-[50px] h-[50px] absolute left-[15px] -translate-y-[65px] z-20 rounded-md border-solid border-white border-[2px]" id="map_window"></div>

    <div class="flex lg:justify-center lg:flex-row flex-col lg:gap-[155px] gap-5 lg:mt-[20px] mt-[26px] content-wrapper text-[18px] leading-[32px]" >

      <div class="flex gap-[18px] relative" id="map_ineratec_logo" data-src="/{{ base_path ~ directory }}/assets/logos/ineratec-icon-map.png" data-shadow="/{{ base_path ~ directory }}/assets/icons/square-pin.svg">
        <div class="w-10">
          <img class="w-[40px] h-[36px]" src="/{{ base_path ~ directory }}/assets/logos/ineratec-icon-shodow.png" alt="" />
          <img class="absolute w-[25px] h-[11px] top-[7px] left-[7px]" src="/{{ base_path ~ directory }}/assets/logos/ineratec-icon-map.png" />
        </div>
        <p>Firmenstandorte</p>
      </div>

      <div class="flex gap-[18px]" id="project_pin" data-src="/{{ base_path ~ directory }}/assets/icons/pin.svg">
        <div class="w-10">
          <img class="w-[36px] h-[36px] object-contain" src="/{{ base_path ~ directory }}/assets/icons/pin.svg" alt="projects pin" />
        </div>
        <p>Projektestandorte</p>
      </div>

      <div class="flex gap-[18px]">
        <div class="w-10">
          <div class="w-[30px] h-[30px] border-[2px] border-solid border-mapOrangeBorder bg-mapOrangeFill"></div>
        </div>
        <p>
          Power-to-X-Sweet-Spots
        </p>
      </div>

    </div>

  </div>

{% endblock paragraph %}



