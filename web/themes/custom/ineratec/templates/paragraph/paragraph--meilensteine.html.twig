{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{{ attach_library('ineratec/vertical-slider') }}


{% block paragraph %}

	<section class="content-wrapper text-black lg:mb-[189px] mb-[156px]">
		<h3 class="text-left md:text-center heading-h2 lg:mb-[81px] mb-[44px] text-black">
			{{ content.field_meilensteine_main_headline.0}}
		</h3>
		<div class="2xl:h-[750px] md:h-[66vh] h-[422px] text-black relative">
			<div class="swiper years-vertical-scroll overflow-hidden">
				<div class="swiper-wrapper">
					{% for paragraph in content.field_meilensteine_element %}
						{% if paragraph["#paragraph"]%}
							<div class="swiper-slide years-vertical-slide  flex flex-col lg:flex-row lg:justify-between justify-center">
								<div class="md:max-w-[235px] max-w-[246px] lg:mb-0 mb-[28px]">
									<h2 class="heading-h3 text-left">
										{{ paragraph['#paragraph'].field_meilensteine_headline.0.value | raw }}
									</h2>
								</div>
								<div class="md:max-w-[420px] max-w-[246px]">
									<div class="p-normal text-left">
										{{ paragraph['#paragraph'].field_meilensteine_text.0.value | raw}}
									</div>
								</div>
							</div>
						{% endif %}
					{% endfor %}
				</div>
			</div>
			<div class="w-[44px] 2xl:h-[750px] md:h-[66vh] h-[422px] bg-blue  inline-block absolute top-0 lg:left-[48.35%] left-0 text-white font-PtSansBold rounded-[58px]">
				<div class="swiper-container year-thumbs z-50  overflow-hidden w-full h-full ">
					<div class="swiper-wrapper">
						{% for paragraph in content.field_meilensteine_element %}
							{% if paragraph["#paragraph"]%}
								<div class="swiper-slide opacity-40 flex justify-center items-center">
									<div class="swiper-slide-container rotate-90 text-[18px] leading-[30px] mt-[10px] cursor-pointer">{{ paragraph['#paragraph'].field_meilensteine_year.0.value }}</div>
								</div>
							{% endif %}
						{% endfor %}
					</div>
				</div>
			</div>	
		</div>
	</section>
{% endblock paragraph %}